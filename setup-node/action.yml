name: setup-node

inputs:
  node-version: 
    description: 'Node Versions'
    required: true
  use-stamp-cache:
    description: 'Whether or not to use the stamp cache (skip install, use old node_modules)'
    default: false

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v3
      name: Set Node Version
      with:
        node-version: ${{ inputs.node-version }}

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      env:
        STAMP: ${{ inputs.use-stamp-cache }}
      run: |        
        if [ "$STAMP" == "true" ] 
        then
          echo "dir=$GITHUB_WORKSPACE/node_modules" >> ${GITHUB_OUTPUT}
        else
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        fi

    - name: Get cache keys
      id: npm-cache-keys
      shell: bash
      env: 
        NODE_VERSION: ${{ inputs.node-version }}
        PACKAGE_HASH: ${{ hashFiles('**/package-lock.json') }}
        OS: ${{ runner.os }}
        STAMP: ${{ inputs.use-stamp-cache }}
      run: |
        if [ "$STAMP" == "true" ] 
        then
          echo "key=npm-stamp-$OS-$NODE_VERSION-$PACKAGE_HASH" >> ${GITHUB_OUTPUT}
          echo "restore=npm-stamp-$OS-$NODE_VERSION-" >> ${GITHUB_OUTPUT}
        else
          echo "key=npm-$OS-$NODE_VERSION-$PACKAGE_HASH" >> ${GITHUB_OUTPUT}
          echo "restore=npm-$OS-$NODE_VERSION-" >> ${GITHUB_OUTPUT}
        fi

    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ steps.npm-cache-keys.outputs.key }}
        restore-keys: |
          ${{ steps.npm-cache-keys.outputs.restore }}

    - run: npx npm ci --prefer-offline --no-audit --no-shrinkwrap
      shell: bash
      name: Install Dependencies
      if: inputs.use-stamp-cache && steps.npm-cache.outputs.cache-hit != 'true'

    - run: |  
        rm -rf node_modules/.ng-packagr-ngcc
        rm -rf node_modules/.cli-ngcc
        rm -rf node_modules/.cache
      shell: bash
      name: Clear nx and angular junk
      if: inputs.use-stamp-cache && steps.npm-cache.outputs.cache-hit == 'true'

